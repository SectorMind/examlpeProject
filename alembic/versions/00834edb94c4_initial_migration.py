"""Initial migration

Revision ID: 00834edb94c4
Revises: 
Create Date: 2024-07-01 18:21:38.538327

"""
from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
import sqlalchemy_utils

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00834edb94c4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consumer',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_consumer_id'), 'consumer', ['id'], unique=False)
    op.create_table('ticket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_name', sa.String(), nullable=True),
    sa.Column('row', sa.String(), nullable=True),
    sa.Column('seat', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_id'), 'ticket', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('user_name', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('phone_number', sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20), nullable=True),
    sa.Column('role', postgresql.ENUM('ADMIN', 'MODERATOR', 'VIEWER', name='userrole', create_type=False), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('user_name')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('consumer_ticket_link',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consumer_id', sa.UUID(), nullable=True),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['consumer_id'], ['consumer.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_id', name='uq_ticket_id')
    )
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='"UserRole"').drop(op.get_bind())
    # op.sync_enum_values('public', 'userrole', ['ADMIN', 'MODERATOR', 'VIEWER'],
    #                     [TableReference(table_schema='public', table_name='user', column_name='role')],
    #                     enum_values_to_rename=[])
    op.sync_enum_values('public', 'userrole', ['ADMIN', 'MODERATOR', 'VIEWER'],
                        [TableReference(table_schema='public', table_name='user', column_name='role')])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values('public', 'userrole', ['admin', 'moderator', 'viewer'],
                        [TableReference(table_schema='public', table_name='user', column_name='role')])
    # op.sync_enum_values('public', 'userrole', ['admin', 'moderator', 'viewer'],
    #                     [TableReference(table_schema='public', table_name='user', column_name='role')],
    #                     enum_values_to_rename=[])
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='"UserRole"').create(op.get_bind())
    op.drop_table('consumer_ticket_link')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_ticket_id'), table_name='ticket')
    op.drop_table('ticket')
    op.drop_index(op.f('ix_consumer_id'), table_name='consumer')
    op.drop_table('consumer')
    # ### end Alembic commands ###
