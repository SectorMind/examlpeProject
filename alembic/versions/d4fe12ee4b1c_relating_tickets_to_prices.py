"""relating tickets to prices

Revision ID: d4fe12ee4b1c
Revises: 82accabd2617
Create Date: 2024-07-13 13:56:19.188416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd4fe12ee4b1c'
down_revision: Union[str, None] = '82accabd2617'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_user_email', table_name='user')
    # op.drop_table('user')
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='"UserRole"').drop(op.get_bind())
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='userrole').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='userrole').create(op.get_bind())
    # sa.Enum('ADMIN', 'MODERATOR', 'VIEWER', name='"UserRole"').create(op.get_bind())
    # op.create_table('user',
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('user_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('hashed_password', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    # sa.Column('role', postgresql.ENUM('ADMIN', 'MODERATOR', 'VIEWER', name='userrole', create_type=False), autoincrement=False, nullable=False),
    # sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='user_pkey'),
    # sa.UniqueConstraint('phone_number', name='user_phone_number_key'),
    # sa.UniqueConstraint('user_name', name='user_user_name_key')
    # )
    # op.create_index('ix_user_email', 'user', ['email'], unique=False)
    # ### end Alembic commands ###
